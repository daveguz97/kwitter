{"version":3,"sources":["react/img/blank-profile-pic.png","react/img/kwitter-logo.png","redux/helpers/index.js","redux/auth.js","redux/users.js","redux/messages.js","redux/likes.js","redux/index.js","react/components/menu/Menu.js","react/components/login-form/LoginForm.js","react/components/registration-form/RegistrationForm.js","react/components/delete-user/DeleteUser.js","react/components/profile-page/ProfilePage.js","react/components/profile-update/ProfileUpdate.js","react/components/profile-submit/ProfileSubmit.js","react/HOCs/userIsAuthenticated.js","react/HOCs/userIsNotAuthenticated.js","react/components/delete-message/DeleteMessageButton.js","react/components/like-button/LikeButton.js","react/components/message-card/MessageCard.js","react/components/message-menu/MessageMenu.js","react/components/add-message/AddMessageCard.js","react/Home.js","react/components/navigation-bar/NavigationBar.js","react/Profile.js","react/NotFound.js","react/Register.js","react/MessageFeed.js","react/App.js","index.js"],"names":["module","exports","domain","jsonHeaders","Accept","handleJsonResponse","res","ok","json","then","result","createActions","actionName","START","createAction","SUCCESS","FAIL","asyncInitialState","loading","error","asyncCases","state","action","payload","url","LOGIN","login","loginData","dispatch","fetch","method","headers","body","JSON","stringify","catch","err","Promise","reject","LOGOUT","logout","getState","token","auth","Authorization","localStorage","clear","reducers","createReducer","key","initialState","storedState","parse","getItem","Object","keys","every","property","undefined","getInitStateFromStorage","toString","ADD_USER","GET_USER","GET_PROFILE_SUM","GET_IMAGE_PRO","DELETE_USER","addUser","getUser","getProfileSum","getImagePro","deleteUsario","MESSAGE_LIST","messageList","limit","offset","username","CREATE_MESSAGE","DELETE_MESSAGE","createMessage","deleteMessage","LIKE","DELETE_LIKE","like","deleteLike","history","createBrowserHistory","basename","process","store","configureStore","reducer","router","connectRouter","combineReducers","authReducers","user","userReducers","messages","messagesReducers","likes","likesReducers","preloadedState","devTools","subscribe","setItem","Menu","React","Component","handleLogout","event","preventDefault","this","props","render","id","isAuthenticated","className","src","kwitterLogo","alt","exact","to","onClick","connect","LoginForm","password","handleLogin","googleLogin","e","authWindow","window","open","opener","onmessage","close","data","handleChange","setState","target","name","value","Container","onSubmit","FormGroup","FormControl","type","placeholder","autoFocus","required","onChange","FormText","Button","variant","disabled","color","style","message","RegistrationForm","displayName","handleRegistration","push","Fragment","Form","Field","primary","addUserData","withRouter","DeleteUser","handleDeleteUser","confirm","outline","theme","size","deleteUserData","ProfilePage","pictureLocation","about","createdAt","updatedAt","componentDidMount","val","createKwitterDate","Date","updateKwitterDate","Card","Content","Image","avatarDefaultPic","Header","Meta","Description","extra","toDateString","Modal","trigger","image","wrapped","ProfileUpdate","picture","handleUpdateSubmit","location","reload","accept","getImageProData","FormData","ProfileSubmit","handleSubmitProfile","handleUpdate","getProfileSumData","userIsAuthenticated","connectedRouterRedirect","redirectPath","authenticatedSelector","wrapperDisplayName","userIsNotAuthenticated","ownProps","allowRedirectBack","DeleteMessageButton","handleDeleteButton","icon","Icon","LikeButton","handleLikeButton","i","length","messageId","as","labelPosition","Label","basic","pointing","likeData","likeId","MessageCard","header","description","text","logInUser","MessageMenu","isUserList","map","msg","AddMessageCard","handleCreate","Input","createMessageData","Home","NavigationBar","constructor","super","handleItemClick","activeItem","Kwitterlogo","circular","secondary","vertical","Item","active","Profile","Grid","columns","divided","Row","Column","NotFound","pathname","Register","MessageFeed","GridRow","GridColumn","width","App","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9ad9c41e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank-profile-pic.77f5794e.png\";","module.exports = __webpack_public_path__ + \"static/media/kwitter-logo.801ae5b8.png\";","import { createAction } from \"@reduxjs/toolkit\";\n\nexport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const domain = \"https://kwitter-api.herokuapp.com\";\n//export const domain = \"http://localhost:3000\";\n\nexport const jsonHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n};\n\nexport const handleJsonResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then(result => {\n    throw result;\n  });\n};\n\nexport const createActions = actionName => ({\n  START: createAction(actionName + \"/start\"),\n  SUCCESS: createAction(actionName + \"/success\"),\n  FAIL: createAction(actionName + \"/fail\")\n});\n\nexport const asyncInitialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nexport const asyncCases = ({ START, SUCCESS, FAIL }) => ({\n  [START]: (state, action) => {\n    state.loading = true;\n    state.error = null;\n  },\n  [SUCCESS]: (state, action) => {\n    state.loading = false;\n    state.result = action.payload;\n  },\n  [FAIL]: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  }\n});\n\nexport const getInitStateFromStorage = (key, initialState) => {\n  const storedState = JSON.parse(localStorage.getItem(key));\n\n  if (storedState) {\n    const unchangedInitialStateProps =\n      Object.keys(storedState).every(\n        property => initialState[property] !== undefined\n      ) &&\n      Object.keys(initialState).every(\n        property => storedState[property] !== undefined\n      );\n    if (unchangedInitialStateProps) {\n      return storedState;\n    }\n  }\n  return initialState;\n};\n","import {\n  domain,\n  jsonHeaders,\n  handleJsonResponse,\n  getInitStateFromStorage,\n  asyncInitialState,\n  asyncCases,\n  createActions,\n  createReducer,\n} from \"./helpers\";\nconst url = domain + \"/auth\";\n\nconst LOGIN = createActions(\"login\");\nexport const login = (loginData) => (dispatch) => {\n  dispatch(LOGIN.START());\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData),\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(LOGIN.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(LOGIN.FAIL(err))));\n};\nexport const googleLogin = (loginData) => (dispatch) => {\n  dispatch(LOGIN.SUCCESS(loginData));\n};\nconst LOGOUT = createActions(\"logout\");\nexport const logout = () => (dispatch, getState) => {\n  dispatch(LOGOUT.START());\n  const token = getState().auth.login.result.token;\n  dispatch(LOGOUT.SUCCESS({}));\n  return fetch(url + \"/logout\", {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders },\n  })\n    .then(handleJsonResponse)\n    .catch(() => {\n      localStorage.clear();\n    });\n};\nexport const reducers = {\n  login: createReducer(getInitStateFromStorage(\"login\", asyncInitialState), {\n    ...asyncCases(LOGIN),\n    [LOGOUT.SUCCESS.toString()]: () => asyncInitialState,\n  }),\n  logout: createReducer(asyncInitialState, {\n    ...asyncCases(LOGOUT),\n  }),\n};\n","import {\n  domain,\n  jsonHeaders,\n  handleJsonResponse,\n  asyncInitialState,\n  asyncCases,\n  createActions,\n  createReducer,\n} from './helpers';\nconst LOGOUT = createActions('logout');\n// Add user\nconst ADD_USER = createActions('addUser');\nexport const addUser = (addUserData) => (dispatch) => {\n  dispatch(ADD_USER.START());\n  return fetch(domain + '/users/', {\n    method: 'POST',\n    headers: jsonHeaders,\n    body: JSON.stringify(addUserData),\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(ADD_USER.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(ADD_USER.FAIL(err))));\n};\n// get user data\nconst GET_USER = createActions('getUser');\nexport const getUser = () => (dispatch, getState) => {\n  dispatch(GET_USER.START());\n  const { username } = getState().auth.login.result;\n  return fetch(domain + '/users/' + username, {\n    method: 'GET',\n    headers: jsonHeaders,\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(GET_USER.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(GET_USER.FAIL(err))));\n};\n\n// get Profile Summary\nconst GET_PROFILE_SUM = createActions('getProfileSum');\nexport const getProfileSum = (getProfileSumData) => (dispatch, getState) => {\n  dispatch(GET_PROFILE_SUM.START());\n  const { username, token } = getState().auth.login.result;\n  return fetch(domain + '/users/' + username, {\n    method: 'PATCH',\n    headers: { Authorization: 'Bearer ' + token, ...jsonHeaders },\n    body: JSON.stringify(getProfileSumData),\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(GET_PROFILE_SUM.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(GET_PROFILE_SUM.FAIL(err))));\n};\n// get profile Image\nconst GET_IMAGE_PRO = createActions('getImagePro');\nexport const getImagePro = (getImageProData) => (dispatch, getState) => {\n  dispatch(GET_IMAGE_PRO.START());\n  let data = new FormData(getImageProData);\n  const { username, token } = getState().auth.login.result;\n  return fetch(domain + `/users/${username}/picture`, {\n    method: 'PUT',\n    headers: { Authorization: 'Bearer ' + token, Accept: 'application/json' },\n    body: data,\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(GET_IMAGE_PRO.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(GET_IMAGE_PRO.FAIL(err))));\n};\n\n//Delte user\nconst DELETE_USER = createActions('deleteUsario');\nexport const deleteUsario = (deleteUserData) => (dispatch, getState) => {\n  dispatch(DELETE_USER.START());\n\n  const { username, token } = getState().auth.login.result;\n\n  return fetch(domain + `/users/${username}`, {\n    method: 'DELETE',\n    headers: { Authorization: 'Bearer ' + token, ...jsonHeaders },\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(DELETE_USER.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(GET_IMAGE_PRO.FAIL(err))))\n    .then((result) => dispatch(LOGOUT.SUCCESS(result)));\n};\n\nexport const reducers = {\n  addUser: createReducer(asyncInitialState, {\n    ...asyncCases(ADD_USER),\n  }),\n  getUser: createReducer(asyncInitialState, {\n    ...asyncCases(GET_USER),\n  }),\n  getProfileSum: createReducer(asyncInitialState, {\n    ...asyncCases(GET_PROFILE_SUM),\n  }),\n  getImagePro: createReducer(asyncInitialState, {\n    ...asyncCases(GET_IMAGE_PRO),\n  }),\n  deleteUsario: createReducer(asyncInitialState, {\n    ...asyncCases(DELETE_USER),\n  }),\n};\n","import {\n  domain,\n  jsonHeaders,\n  handleJsonResponse,\n  asyncInitialState,\n  asyncCases,\n  createActions,\n  createReducer,\n} from './helpers';\n\nconst url = domain + '/messages';\n\n// create list of messages\nconst MESSAGE_LIST = createActions('messageList');\nexport const messageList = (limit = 100, offset = 0, username) => (\n  dispatch\n) => {\n  dispatch(MESSAGE_LIST.START());\n\n  const apiUrl =\n    url +\n    '?limit=' +\n    limit +\n    '&offset=' +\n    offset +\n    (username ? '&username=' + username : '');\n\n  return fetch(apiUrl, {\n    method: 'GET',\n    headers: jsonHeaders,\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(MESSAGE_LIST.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(MESSAGE_LIST.FAIL(err))));\n};\n\n// Add a message\nconst CREATE_MESSAGE = createActions('createMessage');\nexport const createMessage = (createMessageData) => (dispatch, getState) => {\n  dispatch(CREATE_MESSAGE.START());\n\n  const token = getState().auth.login.result.token;\n\n  return fetch(url, {\n    method: 'POST',\n    headers: { Authorization: 'Bearer ' + token, ...jsonHeaders },\n    body: JSON.stringify(createMessageData),\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(CREATE_MESSAGE.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(CREATE_MESSAGE.FAIL(err))));\n};\n\n// delete a message\nconst DELETE_MESSAGE = createActions('deleteMessage');\nexport const deleteMessage = (id) => (dispatch, getState) => {\n  dispatch(DELETE_MESSAGE.START());\n\n  const token = getState().auth.login.result.token;\n  const apiUrl = url + '/' + id;\n\n  return fetch(apiUrl, {\n    method: 'DELETE',\n    headers: { Authorization: 'Bearer ' + token, ...jsonHeaders },\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(DELETE_MESSAGE.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(DELETE_MESSAGE.FAIL(err))));\n};\n\nexport const reducers = {\n  messageList: createReducer(asyncInitialState, {\n    ...asyncCases(MESSAGE_LIST),\n  }),\n  createMessage: createReducer(asyncInitialState, {\n    ...asyncCases(CREATE_MESSAGE),\n  }),\n  deleteMessage: createReducer(asyncInitialState, {\n    ...asyncCases(DELETE_MESSAGE),\n  }),\n};\n","import {\n  domain,\n  jsonHeaders,\n  handleJsonResponse,\n  asyncInitialState,\n  asyncCases,\n  createActions,\n  createReducer,\n} from './helpers';\n\nconst url = domain + '/likes';\n\n// Add like\nconst LIKE = createActions('like');\nexport const like = (likeData) => (dispatch, getState) => {\n  dispatch(LIKE.START());\n\n  const token = getState().auth.login.result.token;\n\n  return fetch(url, {\n    method: 'POST',\n    headers: { Authorization: 'Bearer ' + token, ...jsonHeaders },\n    body: JSON.stringify(likeData),\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(LIKE.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(LIKE.FAIL(err))));\n};\n\n// Remove like\nconst DELETE_LIKE = createActions('deleteLike');\nexport const deleteLike = (likeId) => (dispatch, getState) => {\n  dispatch(DELETE_LIKE.START());\n\n  const token = getState().auth.login.result.token;\n\n  return fetch(url + '/' + likeId, {\n    method: 'DELETE',\n    headers: { Authorization: 'Bearer ' + token, ...jsonHeaders },\n  })\n    .then(handleJsonResponse)\n    .then((result) => dispatch(DELETE_LIKE.SUCCESS(result)))\n    .catch((err) => Promise.reject(dispatch(DELETE_LIKE.FAIL(err))));\n};\n\nexport const reducers = {\n  like: createReducer(asyncInitialState, {\n    ...asyncCases(LIKE),\n  }),\n  deleteLike: createReducer(asyncInitialState, {\n    ...asyncCases(DELETE_LIKE),\n  }),\n};\n","import { createBrowserHistory } from 'history';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducers as authReducers } from './auth';\nimport { reducers as userReducers } from './users';\nimport { reducers as messagesReducers } from './messages';\nimport { reducers as likesReducers } from './likes';\n\nexport * from './auth';\nexport * from './users';\nexport * from './messages';\nexport * from './likes';\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n\nexport const store = configureStore({\n  reducer: {\n    router: connectRouter(history),\n    auth: combineReducers(authReducers),\n    user: combineReducers(userReducers),\n    messages: combineReducers(messagesReducers),\n    likes: combineReducers(likesReducers),\n  },\n  preloadedState: {},\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nstore.subscribe(() => {\n  localStorage.setItem('login', JSON.stringify(store.getState().auth.login));\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../../redux\";\nimport kwitterLogo from \"../../img/kwitter-logo.png\";\n\nclass Menu extends React.Component {\n  handleLogout = (event) => {\n    event.preventDefault();\n    this.props.logout();\n  };\n\n  render() {\n    return (\n      <div id=\"menu\">\n        {this.props.isAuthenticated && (\n          <>\n            <img className=\"logo\" src={kwitterLogo} alt=\"Kwitter Logo\"></img>\n            <div id=\"menu-links\">\n              <Link exact to=\"/messagefeed\">\n                Message Feed\n              </Link>\n              <Link to=\"/\" onClick={this.handleLogout}>\n                Logout\n              </Link>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    result: state.auth.logout.result,\n    loading: state.auth.logout.loading,\n    error: state.auth.logout.error,\n  }),\n  { logout }\n)(Menu);\n","import React from 'react';\nimport Menu from '../menu/Menu';\nimport Spinner from 'react-spinkit';\nimport { connect } from 'react-redux';\nimport { login, googleLogin } from '../../../redux';\nimport { messageList } from '../../../redux/messages';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormText from 'react-bootstrap/FormText';\nimport kwitterLogo from '../../img/kwitter-logo.png';\nimport './LoginForm.scss';\n\nclass LoginForm extends React.Component {\n    state = { username: '', password: '' };\n\n    handleLogin = (event) => {\n        event.preventDefault();\n        this.props.login(this.state);\n        this.props.messageList();\n    };\n\n    // Added Google Login\n    googleLogin = (e) => {\n        e.preventDefault();\n        const authWindow = window.open(\n            'https://kwitter-api.herokuapp.com/auth/google/login',\n            '_blank',\n            'width=1000,height=1000'\n        );\n        authWindow.window.opener.onmessage = (e) => {\n            authWindow.close();\n            if (!e || !e.data || !e.data.token) {\n                return;\n            }\n            this.props.googleLogin(e.data);\n        };\n    };\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        const { loading, error } = this.props;\n        return (\n            <section className='LoginForm my-auto text-center'>\n                <aside className='left-side'>\n                    <Menu />\n                    <div className='text-center'>\n                        <img src={kwitterLogo} alt='Logo' className='logo' />\n                        <h1>Find Out What's happening</h1>\n                        <ul>\n                            <li>\n                                <i className='fas fa-user-friends'></i> Gain a\n                                Fan Base\n                            </li>\n                            <li>\n                                <i className='far fa-comment'></i> Post New\n                                Messages\n                            </li>\n                            <li>\n                                <i className='far fa-newspaper'></i> See the\n                                latest trends and news\n                            </li>\n                        </ul>\n                    </div>\n                </aside>\n                <Container className='mx-auto'>\n                    <img\n                        className='logo'\n                        src={kwitterLogo}\n                        alt='Kwitter Logo'\n                    />\n                    <h1>Sign In</h1>\n                    <form id='login-form' onSubmit={this.handleLogin}>\n                        <FormGroup>\n                            <FormControl\n                                type='text'\n                                name='username'\n                                placeholder='Username'\n                                autoFocus\n                                required\n                                onChange={this.handleChange}\n                            />\n                            <i className='fas fa-user-alt'></i>\n                        </FormGroup>\n                        <FormGroup>\n                            <FormControl\n                                type='password'\n                                name='password'\n                                placeholder='password'\n                                required\n                                onChange={this.handleChange}\n                            />\n                            <i className='fas fa-lock'></i>\n                        </FormGroup>\n                        <div>\n                            <FormText>\n                                <Link to='/register-form'>\n                                    {' '}\n                                    New User? Sign Up\n                                </Link>\n                            </FormText>\n                        </div>\n                        <Button\n                            type='submit'\n                            variant='outline-primary'\n                            className='mt-2'\n                            disabled={loading}>\n                            Login\n                        </Button>\n                        <Button\n                            variant='primary'\n                            type='submit'\n                            onClick={this.googleLogin}>\n                            Login With <i className='fab fa-google'></i>\n                        </Button>\n                        {loading && <Spinner name='circle' color='blue' />}\n                        {error && (\n                            <p style={{ color: 'red' }}>{error.message}</p>\n                        )}\n                    </form>\n                </Container>\n            </section>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        result: state.auth.login.result,\n        loading: state.auth.login.loading,\n        error: state.auth.login.error\n    }),\n    { login, messageList, googleLogin }\n)(LoginForm);\n","import React from \"react\";\nimport Spinner from \"react-spinkit\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../../redux/auth\";\nimport { addUser } from \"../../../redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\nimport kwitterLogo from \"../../img/kwitter-logo.png\";\nimport \"./RegistrationForm.scss\";\n\nclass RegistrationForm extends React.Component {\n  state = { username: \"\", displayName: \"\", password: \"\" };\n\n  handleRegistration = (event) => {\n    event.preventDefault();\n    this.props.addUser(this.state);\n    if (this.props.error === null) {\n      return this.props.history.push(\"/\");\n    }\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { loading, error } = this.props;\n\n    return (\n      <React.Fragment>\n        <Container>\n          <section className=\"register-section\">\n            <header>\n              <div className=\"img-div\">\n                <img src={kwitterLogo} alt=\"Logo\" className=\"logo\" />\n              </div>\n              <h1 className=\"text-center\">Sign Up for Kwitter!</h1>\n            </header>\n            <Form id=\"register-form\" onSubmit={this.handleRegistration}>\n              <Form.Field>\n                <label>Username</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  autoFocus\n                  placeholder=\"Username\"\n                  required\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Display Name</label>\n                <input\n                  type=\"text\"\n                  name=\"displayName\"\n                  placeholder=\"Display Name\"\n                  required\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  required\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n              <Button primary type=\"submit\" disabled={loading}>\n                Register\n              </Button>\n              <br />\n              <Link to=\"/\">Return to Login Page</Link>\n            </Form>\n            {loading && <Spinner name=\"circle\" color=\"blue\" />}\n            {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n          </section>\n          <br />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    result: state.user.addUser.result,\n    loading: state.user.addUser.loading,\n    error: state.user.addUser.error,\n  }),\n  { addUser, login }\n)(withRouter(RegistrationForm));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport { deleteUsario } from \"../../../redux\";\n\nclass DeleteUser extends React.Component {\n  handleDeleteUser = (event) => {\n    event.preventDefault();\n    const confirmDelete = window.confirm(\"Do you want to delete this account?\");\n    if (confirmDelete) {\n      this.props.deleteUsario(this.props.id);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Button\n          outline\n          theme=\"danger\"\n          size=\"small\"\n          onClick={this.handleDeleteUser}\n        >\n          Delete Account\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default connect(null, { deleteUsario })(DeleteUser);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProfileSubmit, DeleteUser } from \"..\";\nimport { getUser } from \"../../../redux\";\nimport { domain } from \"../../../redux/helpers\";\nimport { Button, Card, Image, Modal, Header } from \"semantic-ui-react\";\nimport { ProfileUpdate } from \"..\";\nimport \"./ProfilePage.scss\";\nimport avatarDefaultPic from \"../../img/blank-profile-pic.png\";\nimport Container from \"react-bootstrap/Container\";\n// import './ProfilePage.css';\nclass ProfilePage extends React.Component {\n  state = {\n    pictureLocation: \"\",\n    username: \"\",\n    displayName: \"\",\n    about: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n  };\n  componentDidMount = () => {\n    this.props.getUser().then((val) =>\n      this.setState({\n        pictureLocation: val.payload.user.pictureLocation,\n        username: val.payload.user.username,\n        displayName: val.payload.user.displayName,\n        about: val.payload.user.about,\n        createdAt: val.payload.user.createdAt,\n        updatedAt: val.payload.user.updatedAt,\n      })\n    );\n  };\n  render() {\n    const createKwitterDate = new Date(this.state.createdAt);\n    const updateKwitterDate = new Date(this.state.updatedAt);\n    return (\n      <Container>\n        <div className=\"wrapper\">\n          <Card id=\"card\">\n            <Card.Content>\n              <Image\n                id=\"avatar\"\n                src={\n                  this.state.pictureLocation\n                    ? domain + this.state.pictureLocation\n                    : avatarDefaultPic\n                }\n              />\n              <Card.Header>\n                <h2>{this.state.displayName}</h2>\n              </Card.Header>\n              <Card.Meta>\n                <span className=\"date-update\">@{this.state.username}</span>\n              </Card.Meta>\n              <Card.Description>{this.state.about}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <p> Joined Kwitter on: {createKwitterDate.toDateString()}</p>\n              <p> Last Updated on: {updateKwitterDate.toDateString()} </p>\n              <Modal\n                trigger={\n                  <Button className=\"edit-profile\">Update Account</Button>\n                }\n              >\n                <Modal.Header>Update Account Profile</Modal.Header>\n                <Modal.Content>\n                  <Modal.Description>\n                    <Header>Update Account Information</Header>\n                    <ProfileSubmit />\n                    <DeleteUser />\n                  </Modal.Description>\n                </Modal.Content>\n              </Modal>\n              <Modal\n                trigger={\n                  <Button className=\"update-account\">Update Image</Button>\n                }\n              >\n                <Modal.Header>Update Profile Image</Modal.Header>\n                <Modal.Content image>\n                  <Image\n                    wrapped\n                    size=\"medium\"\n                    src={domain + this.state.pictureLocation}\n                  />\n                  <Modal.Description>\n                    <Header>Upload Account Image</Header>\n                    <ProfileUpdate />\n                  </Modal.Description>\n                </Modal.Content>\n              </Modal>\n            </Card.Content>\n          </Card>\n        </div>\n      </Container>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    result: state.user.getUser.result,\n    loading: state.user.getUser.loading,\n    error: state.user.getUser.error,\n  }),\n  { getUser }\n)(ProfilePage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getImagePro } from \"../../../redux\";\nimport { Button } from \"semantic-ui-react\";\nclass ProfileUpdate extends React.Component {\n  state = {\n    picture: \"\",\n  };\n  handleUpdateSubmit = (event) => {\n    event.preventDefault();\n    this.props\n      .getImagePro(event.target)\n      .then((event) => window.location.reload());\n  };\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleUpdateSubmit}>\n          <input\n            type=\"file\"\n            name=\"picture\"\n            accept=\"image/png, image/jpeg, image/gif\"\n          ></input>\n          <Button type=\"submit\">Save Image</Button>\n        </form>\n      </>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    result: state.user.getImagePro.result,\n    loading: state.user.getImagePro.loading,\n    error: state.user.getImagePro.error,\n  }),\n  { getImagePro }\n)(ProfileUpdate);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProfileSum } from \"../../../redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nclass ProfileSubmit extends React.Component {\n  state = {\n    displayName: \"\",\n    password: \"\",\n    about: \"\",\n  };\n  handleSubmitProfile = (event) => {\n    event.preventDefault();\n    this.props\n      .getProfileSum(this.state)\n      .then((event) => window.location.reload());\n  };\n  handleUpdate = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    return (\n      <>\n        <Form id=\"edit-form\" onSubmit={this.handleSubmitProfile}>\n          <Form.Field>\n            <label>Display Name</label>\n            <input\n              type=\"text\"\n              name=\"displayName\"\n              accept=\"text\"\n              onChange={this.handleUpdate}\n            ></input>\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input\n              type=\"text\"\n              name=\"password\"\n              accept=\"text\"\n              onChange={this.handleUpdate}\n            ></input>\n          </Form.Field>\n          <Form.Field>\n            <label>About</label>\n            <input\n              type=\"text\"\n              name=\"about\"\n              accept=\"text\"\n              onChange={this.handleUpdate}\n            ></input>\n          </Form.Field>\n          <Button type=\"submit\">Save Changes</Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    result: state.user.getProfileSum.result,\n    loading: state.user.getProfileSum.loading,\n    error: state.user.getProfileSum.error,\n  }),\n  { getProfileSum }\n)(ProfileSubmit);\n","import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst userIsAuthenticated = connectedRouterRedirect({\n  // The url to redirect user to if they fail\n  redirectPath: \"/\",\n  // If selector is true, wrapper will not redirect\n  // For example let's check that state contains user data\n  authenticatedSelector: state =>\n    state.auth &&\n    state.auth.login &&\n    state.auth.login.result &&\n    state.auth.login.result.token !== undefined,\n  // A nice display name for this check\n  wrapperDisplayName: \"UserIsAuthenticated\"\n});\n\nexport default userIsAuthenticated;\n","import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst userIsNotAuthenticated = connectedRouterRedirect({\n  // This sends the user either to the query param route if we have one, or to the landing page if none is specified and the user is already logged in\n  redirectPath: (state, ownProps) =>\n    `/profiles/${state.auth &&\n      state.auth.login &&\n      state.auth.login.result &&\n      state.auth.login.result.username}`,\n  // This prevents us from adding the query parameter when we send the user away from the login page\n  allowRedirectBack: false,\n  // If selector is true, wrapper will not redirect\n  // So if there is no user data, then we show the page\n  authenticatedSelector: state =>\n    state.auth && state.auth.login && state.auth.login.result === null,\n  // A nice display name for this check\n  wrapperDisplayName: \"UserIsNotAuthenticated\"\n});\n\nexport default userIsNotAuthenticated;\n","import React, { Component } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { connect } from \"../../HOCs\";\nimport { deleteMessage } from \"../../../redux\";\n\nclass DeleteMessageButton extends Component {\n  handleDeleteButton = (event) => {\n    const confirmMessage = window.confirm(\n      \"Do you want to delete this message?\"\n    );\n    if (confirmMessage) {\n      this.props\n        .deleteMessage(this.props.id)\n        .then((event) => window.location.reload());\n    }\n  };\n  render() {\n    return (\n      <Button icon onClick={this.handleDeleteButton} color=\"red\">\n        <Icon name=\"trash\" />\n        Delete\n      </Button>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    result: state.messages.deleteMessage.result,\n    loading: state.messages.deleteMessage.loading,\n    error: state.messages.deleteMessage.error,\n  }),\n  { deleteMessage }\n)(DeleteMessageButton);\n","import React, { Component } from \"react\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\nimport { like, deleteLike } from \"../../../redux\";\nimport { connect } from \"react-redux\";\n\nclass LikeButton extends Component {\n  handleLikeButton = (event) => {\n    event.preventDefault();\n    // is there a like?\n    for (let i = 0; i < this.props.likes.length; i++) {\n      if (this.props.likes[i].username === this.props.username) {\n        // delete a like\n        this.props\n          .deleteLike(this.props.likes[i].id)\n          .then((event) => window.location.reload());\n        return;\n      }\n    }\n    // add a like\n    this.props\n      .like({ messageId: this.props.id })\n      .then((event) => window.location.reload());\n  };\n\n  render() {\n    return (\n      <Button as=\"div\" labelPosition=\"right\" onClick={this.handleLikeButton}>\n        <Button icon primary>\n          <Icon name=\"heart\" />\n          Like\n        </Button>\n        <Label as=\"a\" basic pointing=\"left\">\n          {this.props.likes.length}\n        </Label>\n      </Button>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    username: state.auth.login.result.username,\n  }),\n  { like, deleteLike }\n)(LikeButton);\n","import React, { Component } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport { connect } from \"../../HOCs\";\nimport DeleteMessageButton from \"../delete-message/DeleteMessageButton\";\nimport LikeButton from \"../like-button/LikeButton\";\n\n// import \"./Message.css\"\n\nclass MessageCard extends Component {\n  render() {\n    return (\n      <Card id=\"messagecard\">\n        <Card.Content header={this.props.username} />\n        <Card.Content description={this.props.text} />\n        <Card.Content extra>\n          <p>\n            Created: {new Date(this.props.createdAt).toDateString()}\n            <div>\n              <LikeButton likes={this.props.likes} id={this.props.id} />\n              {this.props.username === this.props.logInUser && (\n                <DeleteMessageButton id={this.props.id} />\n              )}\n            </div>\n          </p>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  logInUser: state.auth.login.result.username,\n}))(MessageCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MessageCard } from \"..\";\nimport { messageList } from \"../../../redux\";\nimport \"./MessageMenu.scss\";\n\nclass MessageMenu extends Component {\n  state = {\n    messages: [],\n  };\n\n  componentDidMount = () => {\n    this.props\n      .messageList(100, 0, this.props.isUserList ? this.props.username : null)\n      .then((val) => this.setState({ messages: val.payload.messages }));\n  };\n\n  render() {\n    return (\n      <div className=\"message-list-wrapper\">\n        {this.state.messages.map((msg) => (\n          <MessageCard\n            className=\"message\"\n            id={msg.id}\n            createdAt={msg.createdAt}\n            key={msg.id}\n            likes={msg.likes}\n            text={msg.text}\n            username={msg.username}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    result: state.messages.messageList.result,\n    loading: state.messages.messageList.loading,\n    error: state.messages.messageList.error,\n    username: state.auth.login.result.username,\n  }),\n  { messageList }\n)(MessageMenu);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport { createMessage } from \"../../../redux\";\nimport Spinner from \"react-spinkit\";\n// TODO: fix addnew messages, likes, delete reload\n\nclass AddMessageCard extends Component {\n  state = {\n    text: \"\",\n  };\n\n  handleCreate = (event) => {\n    event.preventDefault();\n    this.props\n      .createMessage(this.state)\n      .then((event) => window.location.reload());\n    this.setState({ text: \"\" });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { loading, error } = this.props;\n    return (\n      <div id=\"new-message\">\n        <form onSubmit={this.handleCreate}>\n          <Input\n            id=\"message-input\"\n            type=\"text\"\n            name=\"text\"\n            autoFocus\n            required\n            placeholder=\"Enter message\"\n            onChange={this.handleChange}\n          ></Input>\n          <Button id=\"post-button\" type=\"submit\" disabled={loading}>\n            Post your Message\n          </Button>\n        </form>\n        {loading && <Spinner name=\"circle\" color=\"blue\" />}\n        {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    result: state.messages.createMessage.result,\n    loading: state.messages.createMessage.loading,\n    error: state.messages.createMessage.error,\n  }),\n  { createMessage }\n)(AddMessageCard);\n","import React from \"react\";\nimport { LoginForm } from \"./components\";\nimport \"./Home.scss\";\nimport { userIsNotAuthenticated } from \"./HOCs\";\nclass Home extends React.Component {\n  render() {\n    return (\n      <main className=\"Home\">\n        <LoginForm />\n      </main>\n    );\n  }\n}\n\nexport default userIsNotAuthenticated(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import \"./NavigationBar.css\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../../redux\";\nimport { Menu, Image } from \"semantic-ui-react\";\nimport Kwitterlogo from \"../../img/kwitter-logo.png\";\nimport \"./NavigationBar.scss\";\n\nclass NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeItem: \"Profile\" };\n  }\n  handleLogout = (e) => {\n    e.preventDefault();\n    this.props.logout();\n  };\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <nav className=\"NavigationBar\">\n        <div id=\"menu\">\n          <h1 id=\"title\" className=\"text-center\">\n            Kwitter\n          </h1>\n          <div className=\"logo-wrapper\">\n            <Image\n              src={Kwitterlogo}\n              size=\"small\"\n              alt=\"Kwitter Logo\"\n              className=\"ui-small-image\"\n              circular\n            />\n          </div>\n          <div id=\"menu-links\">\n            {this.props.isAuthenticated && (\n              <Menu pointing secondary vertical>\n                <Link to=\"/profiles/:username\">\n                  <Menu.Item\n                    name=\"Profile\"\n                    active={activeItem === \"Profile\"}\n                    onClick={this.handleItemClick}\n                  />\n                </Link>\n                <Link to=\"/messagefeed\">\n                  <Menu.Item\n                    name=\"Message Feed\"\n                    active={activeItem === \"Message Feed\"}\n                    onClick={this.handleItemClick}\n                  />\n                </Link>\n                <Link to=\"/\" onClick={this.handleLogout}>\n                  <Menu.Item\n                    name=\"Logout\"\n                    active={activeItem === \"Logout\"}\n                    onClick={this.handleItemClick}\n                  />\n                </Link>\n              </Menu>\n            )}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    result: state.auth.logout.result,\n    loading: state.auth.logout.loading,\n    error: state.auth.logout.error,\n  }),\n  { logout }\n)(NavigationBar);\n","import React from \"react\";\n// import { Menu } from './components';\nimport { userIsAuthenticated } from \"./HOCs\";\nimport { ProfilePage } from \"./components\";\nimport { MessageMenu } from \"./components\";\nimport { Grid } from \"./components\";\nimport NavigationBar from \"../react/components/navigation-bar/NavigationBar\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <Grid columns={3} divided>\n          <Grid.Row>\n            <Grid.Column>\n              <NavigationBar isAuthenticated={this.props.isAuthenticated} />\n            </Grid.Column>\n            <Grid.Column>\n              <ProfilePage />\n            </Grid.Column>\n            <Grid.Column>\n              <MessageMenu isUserList={true} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </>\n    );\n  }\n}\nexport default userIsAuthenticated(Profile);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <>\n        <p>Page not found for {this.props.location.pathname}</p>\n        <Link to=\"/\">Go Home</Link>\n      </>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { RegistrationForm, Menu } from \"./components/index\";\nclass Register extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Menu></Menu>\n        <RegistrationForm />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { userIsAuthenticated } from \"./HOCs\";\nimport MessageMenu from \"../react/components/message-menu/MessageMenu\";\nimport AddMessageCard from \"../react/components/add-message/AddMessageCard\";\nimport NavigationBar from \"../react/components/navigation-bar/NavigationBar\";\nimport { Grid, GridColumn, GridRow } from \"semantic-ui-react\";\n\nclass MessageFeed extends React.Component {\n  render() {\n    return (\n      <>\n        <Grid columns={2} divided>\n          <GridRow>\n            <GridColumn width={5}>\n              <NavigationBar isAuthenticated={this.props.isAuthenticated} />\n            </GridColumn>\n            <GridColumn>\n              <h2>Message Feed</h2>\n\n              <AddMessageCard />\n              <MessageMenu isUserList={false} />\n            </GridColumn>\n          </GridRow>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default userIsAuthenticated(MessageFeed);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport NotFound from \"./NotFound\";\nimport Register from \"./Register\";\nimport \"./App.scss\";\nimport MessageFeed from \"./MessageFeed\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/profiles/:username\" component={Profile} />\n          <Route exact path=\"/messagefeed\" component={MessageFeed} />\n          <Route exact path=\"/register-form\" component={Register} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { App } from \"./react\";\nimport { store, history } from \"./redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}